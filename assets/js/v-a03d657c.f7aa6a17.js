"use strict";(self.webpackChunk_2256184693_github_io=self.webpackChunk_2256184693_github_io||[]).push([[901],{6993:(l,n,e)=>{e.r(n),e.d(n,{data:()=>s});const s={key:"v-a03d657c",path:"/pages/fe/css/1.%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80.grid-layout.html",title:"Grid Layout - 网格布局",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"什么是网格布局",slug:"什么是网格布局",children:[]},{level:2,title:"特殊使用方式",slug:"特殊使用方式",children:[]},{level:2,title:"重要术语",slug:"重要术语",children:[]},{level:2,title:"网格定位方式",slug:"网格定位方式",children:[]},{level:2,title:"网格中的对齐",slug:"网格中的对齐",children:[]},{level:2,title:"其他用法",slug:"其他用法",children:[]},{level:2,title:"其他的注意点",slug:"其他的注意点",children:[]},{level:2,title:"参考资料",slug:"参考资料",children:[]}],filePathRelative:"pages/fe/css/1.网格布局.grid-layout.md"}},2457:(l,n,e)=>{e.r(n),e.d(n,{default:()=>D});var s=e(6252),a=e(3586);const t=(0,s._)("h1",{id:"grid-layout-网格布局",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#grid-layout-网格布局","aria-hidden":"true"},"#"),(0,s.Uk)(" Grid Layout - 网格布局")],-1),u=(0,s._)("h2",{id:"什么是网格布局",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#什么是网格布局","aria-hidden":"true"},"#"),(0,s.Uk)(" 什么是网格布局")],-1),o=(0,s._)("p",null,[(0,s._)("a",{target:"_blank",href:"/examples/css-grid/综合示例.html"},"查看Code")],-1),_=(0,s._)("p",null,"用于将页面分割成数个主要区域或者用来定义区域内部元素大小位置和图层之间的关系。网格是一组相交的水平线和垂直线，定义了网格的列和行。",-1),c=(0,s._)("p",null,[(0,s._)("img",{src:a,alt:"Can I Use"})],-1),r=(0,s._)("p",null,"CSS网格布局有以下特点:",-1),i=(0,s._)("ol",null,[(0,s._)("li",null,[(0,s._)("p",null,"固定和灵活的轨道尺寸"),(0,s._)("blockquote",null,[(0,s._)("p",null,"你可以使用固定的轨道尺寸创建网格，比如使用像素单位。你也可以使用比如百分比或者专门为此目的创建的新单位 fr来创建有弹性尺寸的网格。")])]),(0,s._)("li",null,[(0,s._)("p",null,"项目位置"),(0,s._)("blockquote",null,[(0,s._)("p",null,"你可以使用行号、行名或者标定一个网格区域来精确定位元素。网格同时还使用算法来控制未给出明确网格位置的自动定位的元素。")])]),(0,s._)("li",null,[(0,s._)("p",null,"创建额外的轨道来包含元素"),(0,s._)("blockquote",null,[(0,s._)("p",null,"可以使用网格布局定义一个显式网格，但是根据规范它会处理你加在网格外面的内容，当必要时它会自动增加行和列，它会尽可能多的容纳所有的列。")])]),(0,s._)("li",null,[(0,s._)("p",null,"对齐方式的控制"),(0,s._)("blockquote",null,[(0,s._)("p",null,"网格包含对齐特点，以便我们可以控制一旦放置到网格区域中的物体对齐，以及整个网格如何对齐。")])]),(0,s._)("li",null,[(0,s._)("p",null,"重叠内容的控制"),(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("多个元素可以放置在网格单元格中，或者区域可以部分地彼此重叠。然后可以CSS中的 "),(0,s._)("code",null,"z-index"),(0,s.Uk)(" 属性来控制重叠区域显示的优先级。")])])])],-1),p=(0,s._)("h2",{id:"特殊使用方式",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#特殊使用方式","aria-hidden":"true"},"#"),(0,s.Uk)(" 特殊使用方式")],-1),k=(0,s._)("ol",null,[(0,s._)("li",null,[(0,s._)("p",null,"fr单位"),(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("轨道可以使用任何长度单位进行定义。 网格还引入了一个另外的长度单位 "),(0,s._)("code",null,"fr"),(0,s.Uk)(" 来帮助我们创建灵活的网格轨道。 "),(0,s._)("code",null,"1fr"),(0,s.Uk)(" 代表网格容器中可用空间的一等份。"),(0,s._)("code",null,"fr"),(0,s.Uk)(" 和其它长度单位混合使用时， "),(0,s._)("code",null,"fr"),(0,s.Uk)(" 的计算是基于其它单位分配后的剩余空间。")])])]),(0,s._)("li",null,[(0,s._)("p",null,"repeat函数"),(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("有着多轨道的大型网格可使用 "),(0,s._)("code",null,"repeat()"),(0,s.Uk)(" 函数 来重复部分或整个轨道列表。第一个参数是重复次数，第二个参数是重复内容。")])])]),(0,s._)("li",null,[(0,s._)("p",null,"minmax函数"),(0,s._)("blockquote",null,[(0,s._)("p",null,"在设置一个显式的网格或者定义自动创建的行和列的大小的时候，我们也许想给网格一个最小的尺寸，确保他们能扩大到容纳他里面添加的内容。例如，需求行高永远不会缩小到100像素以下，但是如果内容延伸到300像素时的行高也延伸到这个高度。就可以使用网格布局中用minmax()函数来解决这个问题。")])])],-1),d=(0,s._)("h2",{id:"重要术语",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#重要术语","aria-hidden":"true"},"#"),(0,s.Uk)(" 重要术语")],-1),U=(0,s._)("ol",null,[(0,s._)("li",null,[(0,s._)("p",null,"网格容器"),(0,s._)("blockquote",null,[(0,s._)("p",null,"创建一个网格容器的同时，该容器的所有直系子元素都会成为网格子元素（未被标签包裹的文本节点会成为匿名网格项目）。")]),(0,s._)("div",{class:"language-css ext-css line-numbers-mode"},[(0,s._)("pre",{class:"language-css"},[(0,s._)("code",null,[(0,s.Uk)("    "),(0,s._)("span",{class:"token comment"},"/* block的网格， */"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"display"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" grid"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)(" \n    "),(0,s._)("span",{class:"token comment"},"/* inline的网格 */"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"display"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" inline-grid"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token comment"},"/* 子网格 */"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"display"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" subgrid"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"4"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"5"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"6"),(0,s._)("br")])])]),(0,s._)("li",null,[(0,s._)("p",null,"网格项"),(0,s._)("blockquote",null,[(0,s._)("p",null,'网格元素的"直系"子元素都是网格项')])]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("网格轨道 "),(0,s._)("a",{target:"_blank",href:"/examples/css-grid/隐式网格.html"},"查看Code")]),(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("通过 "),(0,s._)("code",null,"grid-template-columns"),(0,s.Uk)(" 和 "),(0,s._)("code",null,"grid-template-rows"),(0,s.Uk)(" 这两个属性我们来定义网格中的行和列。这些属性定义了网格的轨道。一个网格轨道就是网格中任意两条线之间的空间。")])]),(0,s._)("ul",null,[(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("显式网格：手动定义的网格称之为"),(0,s._)("strong",null,"显式网格"),(0,s.Uk)("。")])]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("隐式网格：如果网格中有更多的网格项，或者网格项被放置在显示网格之外，网格容器就会通过向网格中添加网格线来自动生成隐式的网格轨道。显式网格和这些额外的隐式轨道和网格线则构成了所谓的隐式网格。 -可以使用 "),(0,s._)("code",null,"grid-auto-rows"),(0,s.Uk)(" 和 "),(0,s._)("code",null,"grid-auto-columns"),(0,s.Uk)(" 来设置 隐式网格的规格。")])])])]),(0,s._)("li",null,[(0,s._)("p",null,"网格线"),(0,s._)("p",null,[(0,s._)("a",{target:"_blank",href:"/examples/css-grid/网格线使用.html"},"查看Code")]),(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("我们定义网格实际上定义的是网格轨道，而不是网格线。Grid布局会自动创建网格线来方便定位每一个元素。网格线的编号顺序取决于 "),(0,s._)("strong",null,"文章的书写模式"),(0,s.Uk)("（比如英文是从左到右书写的，则网格线1 是最左边的线）。"),(0,s._)("strong",null,"注：负数代表着相反方向的网格线顺序，且不包括隐式轨道。")])]),(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("跨轨道放置网格元素：通过 "),(0,s._)("code",null,"grid-column-start"),(0,s.Uk)(" 、 "),(0,s._)("code",null,"grid-column-end"),(0,s.Uk)(" 、"),(0,s._)("code",null,"grid-row-start"),(0,s.Uk)(" 、"),(0,s._)("code",null,"grid-row-end"),(0,s.Uk)(" 四个属性，可以方便地规定子元素的位置。 默认跨度是一个轨道，也就是如果只延伸一个轨道的话，只需要指明开始编号即可。（合并属性 "),(0,s._)("code",null,"grid-row"),(0,s.Uk)(" 和 "),(0,s._)("code",null,"grid-column"),(0,s.Uk)("："),(0,s._)("code",null,"-start"),(0,s.Uk)(" 和 "),(0,s._)("code",null,"-end"),(0,s.Uk)(" 之间使用 "),(0,s._)("code",null,"/"),(0,s.Uk)(" 隔开）")])]),(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("使用 "),(0,s._)("code",null,"grid-area：grid-row-start / grid-column-start / grid-row-end /grid-column-end"),(0,s.Uk)(" 这个缩略用法可以快速定位。顺序和常用的 "),(0,s._)("code",null,"margin/padding"),(0,s.Uk)(" 有区别。"),(0,s._)("strong",null,"还可以使用负数，表示从尾部开始计算"),(0,s.Uk)("。")])]),(0,s._)("blockquote",null,[(0,s._)("p",null,"使用span的关键字。一般的方法是用编号来规定位置，使用span则是编号结合跨越轨道数量来规定位置。")]),(0,s._)("blockquote",null,[(0,s._)("p",null,"我们还可以命名网格线来定义网格。定义网格的时候把网格线的名字写在方括号内，多个名字用空格隔开(不一定要全部命名) - (这种方式也可以和序号混合使用)。")]),(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("可以结合 "),(0,s._)("code",null,"repeat"),(0,s.Uk)(" 函数来创建多个相同名字的网格线。使用的时候在名字后面增加一个序号即可区分。")])])]),(0,s._)("li",null,[(0,s._)("p",null,"网格单元格"),(0,s._)("blockquote",null,[(0,s._)("p",null,"一个网格单元是在一个网格元素中最小的一个单位。")]),(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("相对于使用网格线来定位，也可以命名网格区域来定位。"),(0,s._)("a",{target:"_blank",href:"/examples/css-grid/命名网格区域.html"},"查看Code")])]),(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("当一个区域的线都由"),(0,s._)("code",null,"-start"),(0,s.Uk)(" 和 "),(0,s._)("code",null,"-end"),(0,s.Uk)(" 作为后缀的话，网格会为区域创建一个名字，名字就是后缀前的单词。反之亦是如此。如果定义一个网格区域，则会隐式的命名周围的网格线。")])])]),(0,s._)("li",null,[(0,s._)("p",null,"网格区域"),(0,s._)("blockquote",null,[(0,s._)("p",null,"网格元素可以向着行或者列的方向扩展，创建一个区域。（形状一定是矩形）。")])]),(0,s._)("li",null,[(0,s._)("p",null,"网格间距"),(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("两个网格单元之间的 网格横向间距 或 网格纵向间距 可使用 "),(0,s._)("code",null,"grid-row-gap"),(0,s.Uk)(" he "),(0,s._)("code",null,"grid-column-gap"),(0,s.Uk)(" 属性来创建（合并属性 "),(0,s._)("code",null,"grid-gap"),(0,s.Uk)("）")])])])],-1),g=(0,s._)("h2",{id:"网格定位方式",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#网格定位方式","aria-hidden":"true"},"#"),(0,s.Uk)(" 网格定位方式")],-1),b=(0,s._)("p",null,[(0,s._)("a",{target:"_blank",href:"/examples/css-grid/有关定位.html"},"查看Code")],-1),m=(0,s._)("ul",null,[(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("默认情况下 子项目会在行流向下放置于每一个单元格中，一行一行的放置，这是网格的自动定位。如果显式网格中没有多余行时则会创建一个隐式的新行。此时，隐式的网格尺寸是自适应的，不过可以通过 "),(0,s._)("code",null,"grid-auto-rows"),(0,s.Uk)(" 这个属性来控制隐式网格的大小。")])]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("可以使用 "),(0,s._)("code",null,"grid-auto-flow"),(0,s.Uk)(" 改变放置的优先流向。")]),(0,s._)("blockquote",null,[(0,s._)("p",null,"可选值")]),(0,s._)("ul",null,[(0,s._)("li",null,"row(默认值)"),(0,s._)("li",null,"column"),(0,s._)("li",null,"row/column dense")])]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("网格中，部分项目有着自己明确的位置，而另一些则依赖自动定位。除了我们明确定位过的项目，自动定位项目都会依照DOM中的顺序被网格自动处理。这种情况下经常会因大小不等而出现缺口。在没有逻辑顺序的情况下，我们倾向于创建一种齐整的没有缺口的布局。这时候可以改变网格容器放置流向 "),(0,s._)("code",null,"grid-auto-flow"),(0,s.Uk)("，这时候就需要使用 "),(0,s._)("code",null,"dense"),(0,s.Uk)(" 关键字了。该关键字定义了填充网格时的稀疏和密集两种不同算法。使用dense时将采用密集算法，将较小项目放置到较早的空缺中。可以应用在图片墙等需求中。")])]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("当字符串或者文本被直接包含在网格容器中时，它们会被创建为匿名的网格项目。"),(0,s._)("strong",null,"匿名项目因为无法选中，所以位置全靠自动定位规则来确定，所以可能会出现在网格的不可预期的位置"),(0,s.Uk)("。")])])],-1),h=(0,s._)("h2",{id:"网格中的对齐",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#网格中的对齐","aria-hidden":"true"},"#"),(0,s.Uk)(" 网格中的对齐")],-1),f=(0,s._)("p",null,[(0,s._)("a",{target:"_blank",href:"/examples/css-grid/网格对齐.html"},"查看Code")],-1),y=(0,s._)("ul",null,[(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("网格布局共有 "),(0,s._)("code",null,"Block(Column) Axis"),(0,s.Uk)(" 和 "),(0,s._)("code",null,"Inline(Row) Axis"),(0,s.Uk)(" 两种轴。")])]),(0,s._)("li",null,[(0,s._)("p",null,"项目对齐方式"),(0,s._)("ul",null,[(0,s._)("li",null,[(0,s.Uk)("使用 "),(0,s._)("code",null,"align-items"),(0,s.Uk)(" 和 "),(0,s._)("code",null,"align-self"),(0,s.Uk)(" 控制项目在列轴上的对齐。"),(0,s._)("code",null,"align-items"),(0,s.Uk)("设置在网格容器上，相当于为子网格都设置了 "),(0,s._)("code",null,"align-self"),(0,s.Uk)(" 属性。也可以使用 "),(0,s._)("code",null,"align-self"),(0,s.Uk)(" 个性化设置子网格的对齐方式。"),(0,s._)("div",{class:"language-css ext-css line-numbers-mode"},[(0,s._)("pre",{class:"language-css"},[(0,s._)("code",null,[(0,s.Uk)("    "),(0,s._)("span",{class:"token property"},"align-items"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" auto"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"align-items"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" normal"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"align-items"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" start"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"align-items"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" end"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"align-items"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" center"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"align-items"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" stretch"),(0,s._)("span",{class:"token punctuation"},";"),(0,s._)("span",{class:"token comment"},"/* 默认 */"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"align-items"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" baseline"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"align-items"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" first baseline"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"align-items"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" last baseline"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"4"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"5"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"6"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"7"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"8"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"9"),(0,s._)("br")])])]),(0,s._)("li",null,[(0,s.Uk)("在行轴上的对齐与列轴类似。属性 "),(0,s._)("code",null,"justify-items"),(0,s.Uk)(" 和 "),(0,s._)("code",null,"justify-self"),(0,s.Uk)(" 分别与之对应，用法也一样。")])])]),(0,s._)("li",null,[(0,s._)("p",null,"轨道对齐方式"),(0,s._)("ul",null,[(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("属性为 "),(0,s._)("code",null,"align-content"),(0,s.Uk)(" 和 "),(0,s._)("code",null,"justify-content"),(0,s.Uk)(" 。")]),(0,s._)("div",{class:"language-css ext-css line-numbers-mode"},[(0,s._)("pre",{class:"language-css"},[(0,s._)("code",null,[(0,s.Uk)("    "),(0,s._)("span",{class:"token property"},"align-content"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" normal"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"align-content"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" start"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)(),(0,s._)("span",{class:"token comment"},"/* 默认 */"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"align-content"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" end"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"align-content"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" center"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"align-content"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" stretch"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"align-content"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" space-around"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"align-content"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" space-between"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"align-content"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" space-evenly"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"align-content"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" baseline"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"align-content"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" first baseline"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"align-content"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" last baseline"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"4"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"5"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"6"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"7"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"8"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"9"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"10"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"11"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"12"),(0,s._)("br")])])])])])],-1),x=(0,s._)("h2",{id:"其他用法",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#其他用法","aria-hidden":"true"},"#"),(0,s.Uk)(" 其他用法")],-1),q=(0,s._)("ol",null,[(0,s._)("li",null,[(0,s._)("p",null,"grid-template"),(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("包含了 "),(0,s._)("code",null,"grid-template-rows"),(0,s.Uk)(" 和 "),(0,s._)("code",null,"grid-template-columns"),(0,s.Uk)(" 和 "),(0,s._)("code",null,"grid-template-areas"),(0,s.Uk)(" 三个属性")])]),(0,s._)("ul",null,[(0,s._)("li",null,[(0,s._)("p",null,"none"),(0,s._)("div",{class:"language-css ext-css line-numbers-mode"},[(0,s._)("pre",{class:"language-css"},[(0,s._)("code",null,[(0,s.Uk)("    "),(0,s._)("span",{class:"token property"},"grid-template"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" none"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br")])])]),(0,s._)("li",null,[(0,s._)("p",null,"< grid-tempalte-rows > / < grid-template-columns >"),(0,s._)("div",{class:"language-css ext-css line-numbers-mode"},[(0,s._)("pre",{class:"language-css"},[(0,s._)("code",null,[(0,s.Uk)("    "),(0,s._)("span",{class:"token property"},"grid-template"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)(" 100px 1fr / 50px 1fr"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br")])])]),(0,s._)("li",null,[(0,s._)("p",null,"[ < line-names >? < string > < track-size >? < line-names >? ]+ [ / < explicit-track-list > ]?"),(0,s._)("div",{class:"language-css ext-css line-numbers-mode"},[(0,s._)("pre",{class:"language-css"},[(0,s._)("code",null,[(0,s.Uk)("    "),(0,s._)("span",{class:"token property"},"grid-template"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)("  "),(0,s._)("span",{class:"token string"},'"a a a"'),(0,s.Uk)("\n                    "),(0,s._)("span",{class:"token string"},'"b b b"'),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"grid-template"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)("  "),(0,s._)("span",{class:"token string"},'"a a a"'),(0,s.Uk)(" 20%\n                    "),(0,s._)("span",{class:"token string"},'"b b b"'),(0,s.Uk)(" auto"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token property"},"grid-template"),(0,s._)("span",{class:"token punctuation"},":"),(0,s.Uk)("  [header-top] "),(0,s._)("span",{class:"token string"},'"a a a"'),(0,s.Uk)(" [header-bottom]\n                    [main-top] "),(0,s._)("span",{class:"token string"},'"b b b"'),(0,s.Uk)(" [main-bottom]\n                    / auto 1fr auto"),(0,s._)("span",{class:"token punctuation"},";"),(0,s.Uk)("\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"4"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"5"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"6"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"7"),(0,s._)("br")])])])])]),(0,s._)("li",null,[(0,s._)("p",null,"grid"),(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("包含了 "),(0,s._)("code",null,"grid-template-rows"),(0,s.Uk)(" 、 "),(0,s._)("code",null,"grid-template-columns"),(0,s.Uk)(" 、 "),(0,s._)("code",null,"grid-template-areas"),(0,s.Uk)(" 、"),(0,s._)("code",null,"grid-auto-rows"),(0,s.Uk)(" 、"),(0,s._)("code",null,"grid-auto-columns"),(0,s.Uk)(" 、"),(0,s._)("code",null,"grid-auto-flow"),(0,s.Uk)(" 这几个属性。")])]),(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("注意：使用 "),(0,s._)("code",null,"grid"),(0,s.Uk)(" 会将 "),(0,s._)("code",null,"grid-row-gap"),(0,s.Uk)(" 和 "),(0,s._)("code",null,"grid-column-gap"),(0,s.Uk)(" 设置为初始值")])])])],-1),v=(0,s._)("h2",{id:"其他的注意点",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#其他的注意点","aria-hidden":"true"},"#"),(0,s.Uk)(" 其他的注意点")],-1),w=(0,s._)("ul",null,[(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("区别与flex "),(0,s._)("a",{target:"_blank",href:"/examples/css-grid/特殊使用示例_区别于flex.html"},"查看Code")]),(0,s._)("ol",null,[(0,s._)("li",null,[(0,s._)("p",null,"弹性盒布局是为一维布局服务的（横向或纵向），而网格布局则为二维布局服务。")]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("使用"),(0,s._)("code",null,"auto-fit"),(0,s.Uk)(" 和 "),(0,s._)("code",null,"auto-fill"),(0,s.Uk)("属性结合 "),(0,s._)("code",null,"repeat()"),(0,s.Uk)(" 函数以及 "),(0,s._)("code",null,"minmax()"),(0,s.Uk)(" 函数，达到类似弹性盒的效果。")]),(0,s._)("blockquote",null,[(0,s._)("p",null,"auto-fill 更加倾向于用更多的列占满当前行; auto-fit 更加倾向于用少列占满当前行")])])])]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("与绝对定位元素结合使用， 照常一样将设置网格容器 "),(0,s._)("code",null,"position: relative"),(0,s.Uk)("，将需要定位的网格设置"),(0,s._)("code",null,"position: absolute"),(0,s.Uk)("。"),(0,s._)("a",{target:"_blank",href:"/examples/css-grid/结合定位元素.html"},"查看Code")]),(0,s._)("ol",null,[(0,s._)("li",null,[(0,s._)("p",null,"默认情况下，定位的项目不会拉伸成网格大小。")]),(0,s._)("li",null,[(0,s._)("p",null,"定位网格可以使用隐式轨道，但是并不能创建隐式轨道。")]),(0,s._)("li",null,[(0,s._)("p",null,"定位网格不会占用有关自动放置功能的单元格，而且网格容器在放置子网格的时候会忽略定位网格。")]),(0,s._)("li",null,[(0,s._)("p",null,"定位时使用auto的特殊情况。")])])])],-1),C=(0,s._)("h2",{id:"参考资料",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#参考资料","aria-hidden":"true"},"#"),(0,s.Uk)(" 参考资料")],-1),S={href:"https://css-tricks.com/snippets/css/complete-guide-grid/",target:"_blank",rel:"noopener noreferrer"},G=(0,s.Uk)("Complete Guide to CSS Grid Layout"),B={href:"https://css-tricks.com/auto-sizing-columns-css-grid-auto-fill-vs-auto-fit/",target:"_blank",rel:"noopener noreferrer"},E=(0,s.Uk)("auto-fill VS auto-fit"),L={href:"https://blogs.igalia.com/mrego/2016/05/27/css-grid-layout-and-positioned-items/",target:"_blank",rel:"noopener noreferrer"},W=(0,s.Uk)("grid & absolute"),j={href:"https://gridbyexample.com/learn/",target:"_blank",rel:"noopener noreferrer"},z=(0,s.Uk)("Grid by Example"),A={},D=(0,e(3744).Z)(A,[["render",function(l,n){const e=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.iD)(s.HY,null,[t,u,o,_,c,r,i,p,k,d,U,g,b,m,h,f,y,x,q,v,w,C,(0,s._)("ul",null,[(0,s._)("li",null,[(0,s._)("p",null,[(0,s._)("a",S,[G,(0,s.Wm)(e)])])]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s._)("a",B,[E,(0,s.Wm)(e)])])]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s._)("a",L,[W,(0,s.Wm)(e)])])]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s._)("a",j,[z,(0,s.Wm)(e)])])])])],64)}]])},3744:(l,n)=>{n.Z=(l,n)=>{const e=l.__vccOpts||l;for(const[l,s]of n)e[l]=s;return e}},3586:(l,n,e)=>{l.exports=e.p+"assets/img/grid-caniuse.740915b8.png"}}]);